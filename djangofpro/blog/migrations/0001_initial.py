# Generated by Django 3.1.5 on 2021-02-27 06:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100)),
                ('video', models.FileField(blank='True', null='True', upload_to='video/Tourism/%y')),
                ('text', models.TextField(blank='True', null='True')),
                ('author', models.ForeignKey(blank='True', null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='TPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('header_image', models.ImageField(blank='True', null='True', upload_to='images/Tourism/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank='True', related_name='blog_postto', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='tcomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('comment_image', models.ImageField(blank='True', null='True', upload_to='images/comment/tourism/')),
                ('tcc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tcmnt', to='blog.tpost')),
            ],
        ),
        migrations.CreateModel(
            name='SVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100)),
                ('video', models.FileField(blank='True', null='True', upload_to='video/Sports/%y')),
                ('text', models.TextField(blank='True', null='True')),
                ('author', models.ForeignKey(blank='True', null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='SPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('header_image', models.ImageField(blank='True', null='True', upload_to='images/Sports/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank='True', related_name='blog_postsp', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='spcomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('comment_image', models.ImageField(blank='True', null='True', upload_to='images/comment/sports/')),
                ('spc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spcmnt', to='blog.spost')),
            ],
        ),
        migrations.CreateModel(
            name='OVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100)),
                ('video', models.FileField(blank='True', null='True', upload_to='video/Others/%y')),
                ('text', models.TextField(blank='True', null='True')),
                ('author', models.ForeignKey(blank='True', null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='OPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('header_image', models.ImageField(blank='True', null='True', upload_to='images/Others/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank='True', related_name='blog_postot', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ocomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('comment_image', models.ImageField(blank='True', null='True', upload_to='images/comment/others/')),
                ('oc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ocmnt', to='blog.opost')),
            ],
        ),
        migrations.CreateModel(
            name='HVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100)),
                ('video', models.FileField(blank='True', null='True', upload_to='video/Health/%y')),
                ('text', models.TextField(blank='True', null='True')),
                ('author', models.ForeignKey(blank='True', null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='HPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('header_image', models.ImageField(blank='True', null='True', upload_to='images/Health/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank='True', related_name='blog_posthe', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='hcomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('comment_image', models.ImageField(blank='True', null='True', upload_to='images/comment/health/')),
                ('hc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hcmnt', to='blog.hpost')),
            ],
        ),
        migrations.CreateModel(
            name='ExVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100)),
                ('video', models.FileField(blank='True', null='True', upload_to='video/Exercises/%y')),
                ('text', models.TextField(blank='True', null='True')),
                ('author', models.ForeignKey(blank='True', null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ExPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('header_image', models.ImageField(blank='True', null='True', upload_to='images/Exercises/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank='True', related_name='blog_postex', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='excomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('comment_image', models.ImageField(blank='True', null='True', upload_to='images/comment/exercises/')),
                ('exc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='excmnt', to='blog.expost')),
            ],
        ),
        migrations.CreateModel(
            name='EnVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100)),
                ('video', models.FileField(blank='True', null='True', upload_to='video/Entertainment/%y')),
                ('text', models.TextField(blank='True', null='True')),
                ('author', models.ForeignKey(blank='True', null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='EnPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('header_image', models.ImageField(blank='True', null='True', upload_to='images/Entertainment/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank='True', related_name='blog_posten', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='encomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('comment_image', models.ImageField(blank='True', null='True', upload_to='images/comment/entertainment/')),
                ('enc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encmnt', to='blog.enpost')),
            ],
        ),
        migrations.CreateModel(
            name='EdVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100)),
                ('video', models.FileField(blank='True', null='True', upload_to='video/Education/%y')),
                ('text', models.TextField(blank='True', null='True')),
                ('author', models.ForeignKey(blank='True', null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='EdPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('header_image', models.ImageField(blank='True', null='True', upload_to='images/Education/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank='True', related_name='blog_posted', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='edcomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('comment_image', models.ImageField(blank='True', null='True', upload_to='images/comment/education/')),
                ('edc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edcmnt', to='blog.edpost')),
            ],
        ),
        migrations.CreateModel(
            name='DVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100)),
                ('video', models.FileField(blank='True', null='True', upload_to='video/Devotinal/%y')),
                ('text', models.TextField(blank='True', null='True')),
                ('author', models.ForeignKey(blank='True', null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='DPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('header_image', models.ImageField(blank='True', null='True', upload_to='images/Devotinal/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank='True', related_name='blog_postde', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='dcomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('comment_image', models.ImageField(blank='True', null='True', upload_to='images/comment/devotinal/')),
                ('dc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dcmnt', to='blog.dpost')),
            ],
        ),
        migrations.CreateModel(
            name='CoVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100)),
                ('video', models.FileField(blank='True', null='True', upload_to='video/Cooking/%y')),
                ('text', models.TextField(blank='True', null='True')),
                ('author', models.ForeignKey(blank='True', null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AgVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=100)),
                ('video', models.FileField(blank='True', null='True', upload_to='video/Agriculture/%y')),
                ('text', models.TextField(blank='True', null='True')),
                ('author', models.ForeignKey(blank='True', null='True', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AgPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('header_image', models.ImageField(blank='True', null='True', upload_to='images/Agriculture/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank='True', related_name='blog_postag', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='agcomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('comment_image', models.ImageField(blank='True', null='True', upload_to='images/comment/agriculture/')),
                ('agc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agcmnt', to='blog.agpost')),
            ],
        ),
    ]
